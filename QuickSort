#include <iostream>
using namespace std;

void quick_sort(int arr[], int first_index, int last_index) {
    if (first_index < last_index) {
        int pivot = first_index;
        int i = first_index + 1;
        int j = last_index;
        while (i < j) {
            // Incrementing i till element is greater than element at pivot
            while (arr[i] <= arr[pivot] && i < last_index) {
                i++;
            }
            // Decrementing j till element is less than element at pivot
            while (arr[j] > arr[pivot]) {
                j--;
            }
            if (i < j) {
                swap(arr[i], arr[j]);
            }
        }
        // Swapping pivot element with element at index j
        swap(arr[pivot], arr[j]);

        // Sorting elements before and after the pivot recursively
        quick_sort(arr, first_index, j - 1);
        quick_sort(arr, j + 1, last_index);
    }
}

int main() {
    int n;
    cout << "Enter the number of elements in the array: ";
    cin >> n;

    int arr[n];
    cout << "Enter elements into the array: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    quick_sort(arr, 0, n - 1);

    cout << "Elements After Sorting: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }

    return 0;
}
